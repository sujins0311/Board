<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.project.mapper.MemberMapper">


	<resultMap type="org.project.domain.MemberVO" id="memberMap">
		<id property="userid" column="userid" />
		<result property="userid" column="userid" />
		<result property="userpw" column="userpw" />
		<result property="username" column="username" />
		<result property="email" column="email" />	
		<result property="regDate" column="regdate" />
		<result property="updateDate" column="updatedate" />
		<collection property="authList" resultMap="authMap">
		</collection>
	</resultMap>


	<resultMap type="org.project.domain.AuthVO" id="authMap">
		<result property="userid" column="userid" />
		<result property="auth" column="auth" />
	</resultMap>

	<!-- 회원정보(로그인) -->
	<select id="read" resultMap="memberMap">
		SELECT
		mem.userid, mem.userpw, mem.username, mem.email, mem.enabled, mem.regdate, mem.updatedate, auth.auth
		FROM member mem
		LEFT OUTER JOIN
		member_auth auth ON mem.userid = auth.userid
		WHERE mem.userid = #{userid}
	</select>
	
	<insert id="register" parameterType="org.project.domain.MemberVO">
    <!-- 회원가입 -->
    INSERT INTO member (userid, userpw, username, email, enabled, regDate)
    VALUES (#{userid}, #{userpw}, #{username}, #{email}, #{enabled}, #{regDate});
	</insert>
	
	<insert id="registerAuth" parameterType="java.util.List">
	    <foreach collection="list" item="auth" separator=";">
	        INSERT INTO member_auth (userid, auth)
	        VALUES (#{auth.userid}, #{auth.auth});
	    </foreach>
	</insert>

	<!-- 회원정보수정 -->
	<!-- <update id="update" parameterType="org.project.domain.MemberVO"> -->
	<update id="update" parameterType="org.project.domain.MemberVO">
		UPDATE member
		SET username = #{username}, email = #{email}, updateDate = #{updateDate}
		WHERE userid = #{userid}
	</update>
	
	<!-- 회원정보수정(비밀번호) -->
	<update id="updatePassword" parameterType="org.project.domain.MemberVO">
	    UPDATE member
	    SET userpw = #{userpw}
	    WHERE userid = #{userid}
	</update>
	
	<!-- 회원정보삭제-비밀번호검증(checkPassword) -->
    <select id="getPassword" parameterType="java.lang.String" resultType="java.lang.String">
        SELECT userpw FROM member WHERE userid = #{userid}
    </select>
	
	<!-- 회원정보삭제 -->
	<delete id="delete" parameterType="java.lang.String">
		DELETE FROM member WHERE userid = #{userid}
	</delete>
	
	<!-- 회원권한삭제 -->
	<delete id="deleteAuth" parameterType="java.lang.String">
		DELETE FROM member_auth WHERE userid = #{userid}
	</delete>


</mapper>
